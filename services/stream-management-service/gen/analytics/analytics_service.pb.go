// proto/analytics/analytics_service.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: analytics/analytics_service.proto

package analytics

import (
	common1 "github.com/Saoudyahya/Live-Streaming-Platform-Architecture/gen/common"
	common "github.com/Saoudyahya/Live-Streaming-Platform-Architecture/services/stream-management-service/gen/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event tracking
type TrackEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StreamId      string                 `protobuf:"bytes,3,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *common.Timestamp      `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SessionId     string                 `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	IpAddress     string                 `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent     string                 `protobuf:"bytes,8,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackEventRequest) Reset() {
	*x = TrackEventRequest{}
	mi := &file_analytics_analytics_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackEventRequest) ProtoMessage() {}

func (x *TrackEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackEventRequest.ProtoReflect.Descriptor instead.
func (*TrackEventRequest) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{0}
}

func (x *TrackEventRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *TrackEventRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TrackEventRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *TrackEventRequest) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *TrackEventRequest) GetTimestamp() *common.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TrackEventRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TrackEventRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *TrackEventRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

type TrackEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common1.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	EventId       string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackEventResponse) Reset() {
	*x = TrackEventResponse{}
	mi := &file_analytics_analytics_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackEventResponse) ProtoMessage() {}

func (x *TrackEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackEventResponse.ProtoReflect.Descriptor instead.
func (*TrackEventResponse) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{1}
}

func (x *TrackEventResponse) GetStatus() *common1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TrackEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

// User analytics
type GetUserAnalyticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartDate     *common.Timestamp      `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *common.Timestamp      `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Metrics       []string               `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAnalyticsRequest) Reset() {
	*x = GetUserAnalyticsRequest{}
	mi := &file_analytics_analytics_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAnalyticsRequest) ProtoMessage() {}

func (x *GetUserAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetUserAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserAnalyticsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserAnalyticsRequest) GetStartDate() *common.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetUserAnalyticsRequest) GetEndDate() *common.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetUserAnalyticsRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetUserAnalyticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common1.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Analytics     *UserAnalytics         `protobuf:"bytes,2,opt,name=analytics,proto3" json:"analytics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAnalyticsResponse) Reset() {
	*x = GetUserAnalyticsResponse{}
	mi := &file_analytics_analytics_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAnalyticsResponse) ProtoMessage() {}

func (x *GetUserAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*GetUserAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserAnalyticsResponse) GetStatus() *common1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetUserAnalyticsResponse) GetAnalytics() *UserAnalytics {
	if x != nil {
		return x.Analytics
	}
	return nil
}

type UserAnalytics struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	UserId                int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TotalStreams          int64                  `protobuf:"varint,2,opt,name=total_streams,json=totalStreams,proto3" json:"total_streams,omitempty"`
	TotalWatchTimeMinutes int64                  `protobuf:"varint,3,opt,name=total_watch_time_minutes,json=totalWatchTimeMinutes,proto3" json:"total_watch_time_minutes,omitempty"`
	TotalFollowers        int64                  `protobuf:"varint,4,opt,name=total_followers,json=totalFollowers,proto3" json:"total_followers,omitempty"`
	AvgViewersPerStream   int64                  `protobuf:"varint,5,opt,name=avg_viewers_per_stream,json=avgViewersPerStream,proto3" json:"avg_viewers_per_stream,omitempty"`
	DailyMetrics          []*DailyMetric         `protobuf:"bytes,6,rep,name=daily_metrics,json=dailyMetrics,proto3" json:"daily_metrics,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UserAnalytics) Reset() {
	*x = UserAnalytics{}
	mi := &file_analytics_analytics_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAnalytics) ProtoMessage() {}

func (x *UserAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAnalytics.ProtoReflect.Descriptor instead.
func (*UserAnalytics) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{4}
}

func (x *UserAnalytics) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserAnalytics) GetTotalStreams() int64 {
	if x != nil {
		return x.TotalStreams
	}
	return 0
}

func (x *UserAnalytics) GetTotalWatchTimeMinutes() int64 {
	if x != nil {
		return x.TotalWatchTimeMinutes
	}
	return 0
}

func (x *UserAnalytics) GetTotalFollowers() int64 {
	if x != nil {
		return x.TotalFollowers
	}
	return 0
}

func (x *UserAnalytics) GetAvgViewersPerStream() int64 {
	if x != nil {
		return x.AvgViewersPerStream
	}
	return 0
}

func (x *UserAnalytics) GetDailyMetrics() []*DailyMetric {
	if x != nil {
		return x.DailyMetrics
	}
	return nil
}

// Stream analytics
type GetStreamAnalyticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Metrics       []string               `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamAnalyticsRequest) Reset() {
	*x = GetStreamAnalyticsRequest{}
	mi := &file_analytics_analytics_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamAnalyticsRequest) ProtoMessage() {}

func (x *GetStreamAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetStreamAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetStreamAnalyticsRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *GetStreamAnalyticsRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetStreamAnalyticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common1.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Analytics     *StreamAnalytics       `protobuf:"bytes,2,opt,name=analytics,proto3" json:"analytics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamAnalyticsResponse) Reset() {
	*x = GetStreamAnalyticsResponse{}
	mi := &file_analytics_analytics_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamAnalyticsResponse) ProtoMessage() {}

func (x *GetStreamAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*GetStreamAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetStreamAnalyticsResponse) GetStatus() *common1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetStreamAnalyticsResponse) GetAnalytics() *StreamAnalytics {
	if x != nil {
		return x.Analytics
	}
	return nil
}

type StreamAnalytics struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	StreamId                string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	TotalViewers            int64                  `protobuf:"varint,2,opt,name=total_viewers,json=totalViewers,proto3" json:"total_viewers,omitempty"`
	PeakViewers             int64                  `protobuf:"varint,3,opt,name=peak_viewers,json=peakViewers,proto3" json:"peak_viewers,omitempty"`
	AvgWatchDurationMinutes int64                  `protobuf:"varint,4,opt,name=avg_watch_duration_minutes,json=avgWatchDurationMinutes,proto3" json:"avg_watch_duration_minutes,omitempty"`
	ChatMessages            int64                  `protobuf:"varint,5,opt,name=chat_messages,json=chatMessages,proto3" json:"chat_messages,omitempty"`
	ViewerMetrics           []*ViewerMetric        `protobuf:"bytes,6,rep,name=viewer_metrics,json=viewerMetrics,proto3" json:"viewer_metrics,omitempty"`
	GeographicDistribution  []*GeographicMetric    `protobuf:"bytes,7,rep,name=geographic_distribution,json=geographicDistribution,proto3" json:"geographic_distribution,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StreamAnalytics) Reset() {
	*x = StreamAnalytics{}
	mi := &file_analytics_analytics_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAnalytics) ProtoMessage() {}

func (x *StreamAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAnalytics.ProtoReflect.Descriptor instead.
func (*StreamAnalytics) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{7}
}

func (x *StreamAnalytics) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamAnalytics) GetTotalViewers() int64 {
	if x != nil {
		return x.TotalViewers
	}
	return 0
}

func (x *StreamAnalytics) GetPeakViewers() int64 {
	if x != nil {
		return x.PeakViewers
	}
	return 0
}

func (x *StreamAnalytics) GetAvgWatchDurationMinutes() int64 {
	if x != nil {
		return x.AvgWatchDurationMinutes
	}
	return 0
}

func (x *StreamAnalytics) GetChatMessages() int64 {
	if x != nil {
		return x.ChatMessages
	}
	return 0
}

func (x *StreamAnalytics) GetViewerMetrics() []*ViewerMetric {
	if x != nil {
		return x.ViewerMetrics
	}
	return nil
}

func (x *StreamAnalytics) GetGeographicDistribution() []*GeographicMetric {
	if x != nil {
		return x.GeographicDistribution
	}
	return nil
}

// Recommendations
type GetRecommendationsRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecommendationType string                 `protobuf:"bytes,2,opt,name=recommendation_type,json=recommendationType,proto3" json:"recommendation_type,omitempty"`
	Limit              int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Context            map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetRecommendationsRequest) Reset() {
	*x = GetRecommendationsRequest{}
	mi := &file_analytics_analytics_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsRequest) ProtoMessage() {}

func (x *GetRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecommendationsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRecommendationsRequest) GetRecommendationType() string {
	if x != nil {
		return x.RecommendationType
	}
	return ""
}

func (x *GetRecommendationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRecommendationsRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetRecommendationsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Status          *common1.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Recommendations []*Recommendation      `protobuf:"bytes,2,rep,name=recommendations,proto3" json:"recommendations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetRecommendationsResponse) Reset() {
	*x = GetRecommendationsResponse{}
	mi := &file_analytics_analytics_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsResponse) ProtoMessage() {}

func (x *GetRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetRecommendationsResponse) GetStatus() *common1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetRecommendationsResponse) GetRecommendations() []*Recommendation {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

type Recommendation struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Type            string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TargetId        string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	ConfidenceScore float32                `protobuf:"fixed32,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	Reason          string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Recommendation) Reset() {
	*x = Recommendation{}
	mi := &file_analytics_analytics_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recommendation) ProtoMessage() {}

func (x *Recommendation) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recommendation.ProtoReflect.Descriptor instead.
func (*Recommendation) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{10}
}

func (x *Recommendation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Recommendation) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Recommendation) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *Recommendation) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Recommendation) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Platform metrics
type GetPlatformMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     *common.Timestamp      `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *common.Timestamp      `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Metrics       []string               `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlatformMetricsRequest) Reset() {
	*x = GetPlatformMetricsRequest{}
	mi := &file_analytics_analytics_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlatformMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformMetricsRequest) ProtoMessage() {}

func (x *GetPlatformMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetPlatformMetricsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlatformMetricsRequest) GetStartDate() *common.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetPlatformMetricsRequest) GetEndDate() *common.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetPlatformMetricsRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetPlatformMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *common1.Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Metrics       *PlatformMetrics       `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlatformMetricsResponse) Reset() {
	*x = GetPlatformMetricsResponse{}
	mi := &file_analytics_analytics_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlatformMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformMetricsResponse) ProtoMessage() {}

func (x *GetPlatformMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetPlatformMetricsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetPlatformMetricsResponse) GetStatus() *common1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetPlatformMetricsResponse) GetMetrics() *PlatformMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type PlatformMetrics struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TotalUsers            int64                  `protobuf:"varint,1,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	ActiveUsers           int64                  `protobuf:"varint,2,opt,name=active_users,json=activeUsers,proto3" json:"active_users,omitempty"`
	ConcurrentStreams     int64                  `protobuf:"varint,3,opt,name=concurrent_streams,json=concurrentStreams,proto3" json:"concurrent_streams,omitempty"`
	TotalWatchTimeMinutes int64                  `protobuf:"varint,4,opt,name=total_watch_time_minutes,json=totalWatchTimeMinutes,proto3" json:"total_watch_time_minutes,omitempty"`
	DailyMetrics          []*DailyMetric         `protobuf:"bytes,5,rep,name=daily_metrics,json=dailyMetrics,proto3" json:"daily_metrics,omitempty"`
	TopStreams            []*TopStream           `protobuf:"bytes,6,rep,name=top_streams,json=topStreams,proto3" json:"top_streams,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PlatformMetrics) Reset() {
	*x = PlatformMetrics{}
	mi := &file_analytics_analytics_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformMetrics) ProtoMessage() {}

func (x *PlatformMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformMetrics.ProtoReflect.Descriptor instead.
func (*PlatformMetrics) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{13}
}

func (x *PlatformMetrics) GetTotalUsers() int64 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *PlatformMetrics) GetActiveUsers() int64 {
	if x != nil {
		return x.ActiveUsers
	}
	return 0
}

func (x *PlatformMetrics) GetConcurrentStreams() int64 {
	if x != nil {
		return x.ConcurrentStreams
	}
	return 0
}

func (x *PlatformMetrics) GetTotalWatchTimeMinutes() int64 {
	if x != nil {
		return x.TotalWatchTimeMinutes
	}
	return 0
}

func (x *PlatformMetrics) GetDailyMetrics() []*DailyMetric {
	if x != nil {
		return x.DailyMetrics
	}
	return nil
}

func (x *PlatformMetrics) GetTopStreams() []*TopStream {
	if x != nil {
		return x.TopStreams
	}
	return nil
}

// Supporting data structures
type DailyMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Value         int64                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	MetricName    string                 `protobuf:"bytes,3,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailyMetric) Reset() {
	*x = DailyMetric{}
	mi := &file_analytics_analytics_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyMetric) ProtoMessage() {}

func (x *DailyMetric) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyMetric.ProtoReflect.Descriptor instead.
func (*DailyMetric) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{14}
}

func (x *DailyMetric) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyMetric) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DailyMetric) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

type ViewerMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *common.Timestamp      `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ViewerCount   int64                  `protobuf:"varint,2,opt,name=viewer_count,json=viewerCount,proto3" json:"viewer_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewerMetric) Reset() {
	*x = ViewerMetric{}
	mi := &file_analytics_analytics_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewerMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewerMetric) ProtoMessage() {}

func (x *ViewerMetric) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewerMetric.ProtoReflect.Descriptor instead.
func (*ViewerMetric) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{15}
}

func (x *ViewerMetric) GetTimestamp() *common.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ViewerMetric) GetViewerCount() int64 {
	if x != nil {
		return x.ViewerCount
	}
	return 0
}

type GeographicMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryCode   string                 `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryName   string                 `protobuf:"bytes,2,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	ViewerCount   int64                  `protobuf:"varint,3,opt,name=viewer_count,json=viewerCount,proto3" json:"viewer_count,omitempty"`
	Percentage    float32                `protobuf:"fixed32,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeographicMetric) Reset() {
	*x = GeographicMetric{}
	mi := &file_analytics_analytics_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeographicMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeographicMetric) ProtoMessage() {}

func (x *GeographicMetric) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeographicMetric.ProtoReflect.Descriptor instead.
func (*GeographicMetric) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{16}
}

func (x *GeographicMetric) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GeographicMetric) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *GeographicMetric) GetViewerCount() int64 {
	if x != nil {
		return x.ViewerCount
	}
	return 0
}

func (x *GeographicMetric) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type TopStream struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StreamId        string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	UserId          int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username        string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	PeakViewers     int64                  `protobuf:"varint,5,opt,name=peak_viewers,json=peakViewers,proto3" json:"peak_viewers,omitempty"`
	DurationMinutes int64                  `protobuf:"varint,6,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TopStream) Reset() {
	*x = TopStream{}
	mi := &file_analytics_analytics_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopStream) ProtoMessage() {}

func (x *TopStream) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_analytics_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopStream.ProtoReflect.Descriptor instead.
func (*TopStream) Descriptor() ([]byte, []int) {
	return file_analytics_analytics_service_proto_rawDescGZIP(), []int{17}
}

func (x *TopStream) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *TopStream) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopStream) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TopStream) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TopStream) GetPeakViewers() int64 {
	if x != nil {
		return x.PeakViewers
	}
	return 0
}

func (x *TopStream) GetDurationMinutes() int64 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

var File_analytics_analytics_service_proto protoreflect.FileDescriptor

const file_analytics_analytics_service_proto_rawDesc = "" +
	"\n" +
	"!analytics/analytics_service.proto\x12\tanalytics\x1a\x13common/common.proto\x1a\x16common/timestamp.proto\"\x83\x03\n" +
	"\x11TrackEventRequest\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1b\n" +
	"\tstream_id\x18\x03 \x01(\tR\bstreamId\x12L\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2,.analytics.TrackEventRequest.PropertiesEntryR\n" +
	"properties\x12/\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x11.common.TimestampR\ttimestamp\x12\x1d\n" +
	"\n" +
	"session_id\x18\x06 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"ip_address\x18\a \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\b \x01(\tR\tuserAgent\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"W\n" +
	"\x12TrackEventResponse\x12&\n" +
	"\x06status\x18\x01 \x01(\v2\x0e.common.StatusR\x06status\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\"\xac\x01\n" +
	"\x17GetUserAnalyticsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x120\n" +
	"\n" +
	"start_date\x18\x02 \x01(\v2\x11.common.TimestampR\tstartDate\x12,\n" +
	"\bend_date\x18\x03 \x01(\v2\x11.common.TimestampR\aendDate\x12\x18\n" +
	"\ametrics\x18\x04 \x03(\tR\ametrics\"z\n" +
	"\x18GetUserAnalyticsResponse\x12&\n" +
	"\x06status\x18\x01 \x01(\v2\x0e.common.StatusR\x06status\x126\n" +
	"\tanalytics\x18\x02 \x01(\v2\x18.analytics.UserAnalyticsR\tanalytics\"\xa1\x02\n" +
	"\rUserAnalytics\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12#\n" +
	"\rtotal_streams\x18\x02 \x01(\x03R\ftotalStreams\x127\n" +
	"\x18total_watch_time_minutes\x18\x03 \x01(\x03R\x15totalWatchTimeMinutes\x12'\n" +
	"\x0ftotal_followers\x18\x04 \x01(\x03R\x0etotalFollowers\x123\n" +
	"\x16avg_viewers_per_stream\x18\x05 \x01(\x03R\x13avgViewersPerStream\x12;\n" +
	"\rdaily_metrics\x18\x06 \x03(\v2\x16.analytics.DailyMetricR\fdailyMetrics\"R\n" +
	"\x19GetStreamAnalyticsRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x18\n" +
	"\ametrics\x18\x02 \x03(\tR\ametrics\"~\n" +
	"\x1aGetStreamAnalyticsResponse\x12&\n" +
	"\x06status\x18\x01 \x01(\v2\x0e.common.StatusR\x06status\x128\n" +
	"\tanalytics\x18\x02 \x01(\v2\x1a.analytics.StreamAnalyticsR\tanalytics\"\xee\x02\n" +
	"\x0fStreamAnalytics\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12#\n" +
	"\rtotal_viewers\x18\x02 \x01(\x03R\ftotalViewers\x12!\n" +
	"\fpeak_viewers\x18\x03 \x01(\x03R\vpeakViewers\x12;\n" +
	"\x1aavg_watch_duration_minutes\x18\x04 \x01(\x03R\x17avgWatchDurationMinutes\x12#\n" +
	"\rchat_messages\x18\x05 \x01(\x03R\fchatMessages\x12>\n" +
	"\x0eviewer_metrics\x18\x06 \x03(\v2\x17.analytics.ViewerMetricR\rviewerMetrics\x12T\n" +
	"\x17geographic_distribution\x18\a \x03(\v2\x1b.analytics.GeographicMetricR\x16geographicDistribution\"\x84\x02\n" +
	"\x19GetRecommendationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12/\n" +
	"\x13recommendation_type\x18\x02 \x01(\tR\x12recommendationType\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12K\n" +
	"\acontext\x18\x04 \x03(\v21.analytics.GetRecommendationsRequest.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x01\n" +
	"\x1aGetRecommendationsResponse\x12&\n" +
	"\x06status\x18\x01 \x01(\v2\x0e.common.StatusR\x06status\x12C\n" +
	"\x0frecommendations\x18\x02 \x03(\v2\x19.analytics.RecommendationR\x0frecommendations\"\x86\x02\n" +
	"\x0eRecommendation\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12)\n" +
	"\x10confidence_score\x18\x03 \x01(\x02R\x0fconfidenceScore\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12C\n" +
	"\bmetadata\x18\x05 \x03(\v2'.analytics.Recommendation.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x01\n" +
	"\x19GetPlatformMetricsRequest\x120\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x11.common.TimestampR\tstartDate\x12,\n" +
	"\bend_date\x18\x02 \x01(\v2\x11.common.TimestampR\aendDate\x12\x18\n" +
	"\ametrics\x18\x03 \x03(\tR\ametrics\"z\n" +
	"\x1aGetPlatformMetricsResponse\x12&\n" +
	"\x06status\x18\x01 \x01(\v2\x0e.common.StatusR\x06status\x124\n" +
	"\ametrics\x18\x02 \x01(\v2\x1a.analytics.PlatformMetricsR\ametrics\"\xb1\x02\n" +
	"\x0fPlatformMetrics\x12\x1f\n" +
	"\vtotal_users\x18\x01 \x01(\x03R\n" +
	"totalUsers\x12!\n" +
	"\factive_users\x18\x02 \x01(\x03R\vactiveUsers\x12-\n" +
	"\x12concurrent_streams\x18\x03 \x01(\x03R\x11concurrentStreams\x127\n" +
	"\x18total_watch_time_minutes\x18\x04 \x01(\x03R\x15totalWatchTimeMinutes\x12;\n" +
	"\rdaily_metrics\x18\x05 \x03(\v2\x16.analytics.DailyMetricR\fdailyMetrics\x125\n" +
	"\vtop_streams\x18\x06 \x03(\v2\x14.analytics.TopStreamR\n" +
	"topStreams\"X\n" +
	"\vDailyMetric\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value\x12\x1f\n" +
	"\vmetric_name\x18\x03 \x01(\tR\n" +
	"metricName\"b\n" +
	"\fViewerMetric\x12/\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x11.common.TimestampR\ttimestamp\x12!\n" +
	"\fviewer_count\x18\x02 \x01(\x03R\vviewerCount\"\x9b\x01\n" +
	"\x10GeographicMetric\x12!\n" +
	"\fcountry_code\x18\x01 \x01(\tR\vcountryCode\x12!\n" +
	"\fcountry_name\x18\x02 \x01(\tR\vcountryName\x12!\n" +
	"\fviewer_count\x18\x03 \x01(\x03R\vviewerCount\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x02R\n" +
	"percentage\"\xc1\x01\n" +
	"\tTopStream\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12!\n" +
	"\fpeak_viewers\x18\x05 \x01(\x03R\vpeakViewers\x12)\n" +
	"\x10duration_minutes\x18\x06 \x01(\x03R\x0fdurationMinutes2\xe3\x03\n" +
	"\x10AnalyticsService\x12I\n" +
	"\n" +
	"TrackEvent\x12\x1c.analytics.TrackEventRequest\x1a\x1d.analytics.TrackEventResponse\x12[\n" +
	"\x10GetUserAnalytics\x12\".analytics.GetUserAnalyticsRequest\x1a#.analytics.GetUserAnalyticsResponse\x12a\n" +
	"\x12GetStreamAnalytics\x12$.analytics.GetStreamAnalyticsRequest\x1a%.analytics.GetStreamAnalyticsResponse\x12a\n" +
	"\x12GetRecommendations\x12$.analytics.GetRecommendationsRequest\x1a%.analytics.GetRecommendationsResponse\x12a\n" +
	"\x12GetPlatformMetrics\x12$.analytics.GetPlatformMetricsRequest\x1a%.analytics.GetPlatformMetricsResponseB\xb4\x01\n" +
	"\rcom.analyticsB\x15AnalyticsServiceProtoP\x01ZHgithub.com/Saoudyahya/Live-Streaming-Platform-Architecture/gen/analytics\xa2\x02\x03AXX\xaa\x02\tAnalytics\xca\x02\tAnalytics\xe2\x02\x15Analytics\\GPBMetadata\xea\x02\tAnalyticsb\x06proto3"

var (
	file_analytics_analytics_service_proto_rawDescOnce sync.Once
	file_analytics_analytics_service_proto_rawDescData []byte
)

func file_analytics_analytics_service_proto_rawDescGZIP() []byte {
	file_analytics_analytics_service_proto_rawDescOnce.Do(func() {
		file_analytics_analytics_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_analytics_analytics_service_proto_rawDesc), len(file_analytics_analytics_service_proto_rawDesc)))
	})
	return file_analytics_analytics_service_proto_rawDescData
}

var file_analytics_analytics_service_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_analytics_analytics_service_proto_goTypes = []any{
	(*TrackEventRequest)(nil),          // 0: analytics.TrackEventRequest
	(*TrackEventResponse)(nil),         // 1: analytics.TrackEventResponse
	(*GetUserAnalyticsRequest)(nil),    // 2: analytics.GetUserAnalyticsRequest
	(*GetUserAnalyticsResponse)(nil),   // 3: analytics.GetUserAnalyticsResponse
	(*UserAnalytics)(nil),              // 4: analytics.UserAnalytics
	(*GetStreamAnalyticsRequest)(nil),  // 5: analytics.GetStreamAnalyticsRequest
	(*GetStreamAnalyticsResponse)(nil), // 6: analytics.GetStreamAnalyticsResponse
	(*StreamAnalytics)(nil),            // 7: analytics.StreamAnalytics
	(*GetRecommendationsRequest)(nil),  // 8: analytics.GetRecommendationsRequest
	(*GetRecommendationsResponse)(nil), // 9: analytics.GetRecommendationsResponse
	(*Recommendation)(nil),             // 10: analytics.Recommendation
	(*GetPlatformMetricsRequest)(nil),  // 11: analytics.GetPlatformMetricsRequest
	(*GetPlatformMetricsResponse)(nil), // 12: analytics.GetPlatformMetricsResponse
	(*PlatformMetrics)(nil),            // 13: analytics.PlatformMetrics
	(*DailyMetric)(nil),                // 14: analytics.DailyMetric
	(*ViewerMetric)(nil),               // 15: analytics.ViewerMetric
	(*GeographicMetric)(nil),           // 16: analytics.GeographicMetric
	(*TopStream)(nil),                  // 17: analytics.TopStream
	nil,                                // 18: analytics.TrackEventRequest.PropertiesEntry
	nil,                                // 19: analytics.GetRecommendationsRequest.ContextEntry
	nil,                                // 20: analytics.Recommendation.MetadataEntry
	(*common.Timestamp)(nil),           // 21: common.Timestamp
	(*common1.Status)(nil),             // 22: common.Status
}
var file_analytics_analytics_service_proto_depIdxs = []int32{
	18, // 0: analytics.TrackEventRequest.properties:type_name -> analytics.TrackEventRequest.PropertiesEntry
	21, // 1: analytics.TrackEventRequest.timestamp:type_name -> common.Timestamp
	22, // 2: analytics.TrackEventResponse.status:type_name -> common.Status
	21, // 3: analytics.GetUserAnalyticsRequest.start_date:type_name -> common.Timestamp
	21, // 4: analytics.GetUserAnalyticsRequest.end_date:type_name -> common.Timestamp
	22, // 5: analytics.GetUserAnalyticsResponse.status:type_name -> common.Status
	4,  // 6: analytics.GetUserAnalyticsResponse.analytics:type_name -> analytics.UserAnalytics
	14, // 7: analytics.UserAnalytics.daily_metrics:type_name -> analytics.DailyMetric
	22, // 8: analytics.GetStreamAnalyticsResponse.status:type_name -> common.Status
	7,  // 9: analytics.GetStreamAnalyticsResponse.analytics:type_name -> analytics.StreamAnalytics
	15, // 10: analytics.StreamAnalytics.viewer_metrics:type_name -> analytics.ViewerMetric
	16, // 11: analytics.StreamAnalytics.geographic_distribution:type_name -> analytics.GeographicMetric
	19, // 12: analytics.GetRecommendationsRequest.context:type_name -> analytics.GetRecommendationsRequest.ContextEntry
	22, // 13: analytics.GetRecommendationsResponse.status:type_name -> common.Status
	10, // 14: analytics.GetRecommendationsResponse.recommendations:type_name -> analytics.Recommendation
	20, // 15: analytics.Recommendation.metadata:type_name -> analytics.Recommendation.MetadataEntry
	21, // 16: analytics.GetPlatformMetricsRequest.start_date:type_name -> common.Timestamp
	21, // 17: analytics.GetPlatformMetricsRequest.end_date:type_name -> common.Timestamp
	22, // 18: analytics.GetPlatformMetricsResponse.status:type_name -> common.Status
	13, // 19: analytics.GetPlatformMetricsResponse.metrics:type_name -> analytics.PlatformMetrics
	14, // 20: analytics.PlatformMetrics.daily_metrics:type_name -> analytics.DailyMetric
	17, // 21: analytics.PlatformMetrics.top_streams:type_name -> analytics.TopStream
	21, // 22: analytics.ViewerMetric.timestamp:type_name -> common.Timestamp
	0,  // 23: analytics.AnalyticsService.TrackEvent:input_type -> analytics.TrackEventRequest
	2,  // 24: analytics.AnalyticsService.GetUserAnalytics:input_type -> analytics.GetUserAnalyticsRequest
	5,  // 25: analytics.AnalyticsService.GetStreamAnalytics:input_type -> analytics.GetStreamAnalyticsRequest
	8,  // 26: analytics.AnalyticsService.GetRecommendations:input_type -> analytics.GetRecommendationsRequest
	11, // 27: analytics.AnalyticsService.GetPlatformMetrics:input_type -> analytics.GetPlatformMetricsRequest
	1,  // 28: analytics.AnalyticsService.TrackEvent:output_type -> analytics.TrackEventResponse
	3,  // 29: analytics.AnalyticsService.GetUserAnalytics:output_type -> analytics.GetUserAnalyticsResponse
	6,  // 30: analytics.AnalyticsService.GetStreamAnalytics:output_type -> analytics.GetStreamAnalyticsResponse
	9,  // 31: analytics.AnalyticsService.GetRecommendations:output_type -> analytics.GetRecommendationsResponse
	12, // 32: analytics.AnalyticsService.GetPlatformMetrics:output_type -> analytics.GetPlatformMetricsResponse
	28, // [28:33] is the sub-list for method output_type
	23, // [23:28] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_analytics_analytics_service_proto_init() }
func file_analytics_analytics_service_proto_init() {
	if File_analytics_analytics_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_analytics_analytics_service_proto_rawDesc), len(file_analytics_analytics_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analytics_analytics_service_proto_goTypes,
		DependencyIndexes: file_analytics_analytics_service_proto_depIdxs,
		MessageInfos:      file_analytics_analytics_service_proto_msgTypes,
	}.Build()
	File_analytics_analytics_service_proto = out.File
	file_analytics_analytics_service_proto_goTypes = nil
	file_analytics_analytics_service_proto_depIdxs = nil
}

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: stream/stream_service.proto
# Protobuf Python Version: 6.32.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    0,
    '',
    'stream/stream_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ..common import common_pb2 as common_dot_common__pb2
from ..common import timestamp_pb2 as common_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1bstream/stream_service.proto\x12\x06stream\x1a\x13\x63ommon/common.proto\x1a\x16\x63ommon/timestamp.proto\"s\n\x18ValidateStreamKeyRequest\x12\x1d\n\nstream_key\x18\x01 \x01(\tR\tstreamKey\x12\x1d\n\nip_address\x18\x02 \x01(\tR\tipAddress\x12\x19\n\x08\x61pp_name\x18\x03 \x01(\tR\x07\x61ppName\"\xd0\x01\n\x19ValidateStreamKeyResponse\x12&\n\x06status\x18\x01 \x01(\x0b\x32\x0e.common.StatusR\x06status\x12\x19\n\x08is_valid\x18\x02 \x01(\x08R\x07isValid\x12\x17\n\x07user_id\x18\x03 \x01(\x03R\x06userId\x12\x1a\n\x08username\x18\x04 \x01(\tR\x08username\x12;\n\x0bpermissions\x18\x05 \x01(\x0b\x32\x19.stream.StreamPermissionsR\x0bpermissions\"\xa4\x01\n\x11StreamPermissions\x12\x1d\n\ncan_stream\x18\x01 \x01(\x08R\tcanStream\x12\x1d\n\ncan_record\x18\x02 \x01(\x08R\tcanRecord\x12\x1f\n\x0bmax_bitrate\x18\x03 \x01(\x05R\nmaxBitrate\x12\x30\n\x14max_duration_minutes\x18\x04 \x01(\x05R\x12maxDurationMinutes\"\xb9\x01\n\x13\x43reateStreamRequest\x12\x17\n\x07user_id\x18\x01 \x01(\x03R\x06userId\x12\x1d\n\nstream_key\x18\x02 \x01(\tR\tstreamKey\x12\x14\n\x05title\x18\x03 \x01(\tR\x05title\x12 \n\x0b\x64\x65scription\x18\x04 \x01(\tR\x0b\x64\x65scription\x12\x32\n\x08metadata\x18\x05 \x01(\x0b\x32\x16.stream.StreamMetadataR\x08metadata\"\x83\x01\n\x14\x43reateStreamResponse\x12&\n\x06status\x18\x01 \x01(\x0b\x32\x0e.common.StatusR\x06status\x12\x1b\n\tstream_id\x18\x02 \x01(\tR\x08streamId\x12&\n\x06stream\x18\x03 \x01(\x0b\x32\x0e.stream.StreamR\x06stream\"\xe2\x01\n\x13UpdateStreamRequest\x12\x1b\n\tstream_id\x18\x01 \x01(\tR\x08streamId\x12,\n\x06status\x18\x02 \x01(\x0e\x32\x14.stream.StreamStatusR\x06status\x12\x32\n\x08metadata\x18\x03 \x01(\x0b\x32\x16.stream.StreamMetadataR\x08metadata\x12!\n\x0cviewer_count\x18\x04 \x01(\x03R\x0bviewerCount\x12)\n\x10\x64uration_seconds\x18\x05 \x01(\x03R\x0f\x64urationSeconds\"f\n\x14UpdateStreamResponse\x12&\n\x06status\x18\x01 \x01(\x0b\x32\x0e.common.StatusR\x06status\x12&\n\x06stream\x18\x02 \x01(\x0b\x32\x0e.stream.StreamR\x06stream\"/\n\x10GetStreamRequest\x12\x1b\n\tstream_id\x18\x01 \x01(\tR\x08streamId\"c\n\x11GetStreamResponse\x12&\n\x06status\x18\x01 \x01(\x0b\x32\x0e.common.StatusR\x06status\x12&\n\x06stream\x18\x02 \x01(\x0b\x32\x0e.stream.StreamR\x06stream\"G\n\x17GetActiveStreamsRequest\x12\x14\n\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n\x06\x63ursor\x18\x02 \x01(\tR\x06\x63ursor\"\xae\x01\n\x18GetActiveStreamsResponse\x12&\n\x06status\x18\x01 \x01(\x0b\x32\x0e.common.StatusR\x06status\x12(\n\x07streams\x18\x02 \x03(\x0b\x32\x0e.stream.StreamR\x07streams\x12\x1f\n\x0bnext_cursor\x18\x03 \x01(\tR\nnextCursor\x12\x1f\n\x0btotal_count\x18\x04 \x01(\x05R\ntotalCount\"\x81\x01\n\x10\x45ndStreamRequest\x12\x1b\n\tstream_id\x18\x01 \x01(\tR\x08streamId\x12)\n\x10\x64uration_seconds\x18\x02 \x01(\x03R\x0f\x64urationSeconds\x12%\n\x0erecording_path\x18\x03 \x01(\tR\rrecordingPath\";\n\x11\x45ndStreamResponse\x12&\n\x06status\x18\x01 \x01(\x0b\x32\x0e.common.StatusR\x06status\"\xb2\x01\n\x19RecordingCompletedRequest\x12\x1b\n\tstream_id\x18\x01 \x01(\tR\x08streamId\x12%\n\x0erecording_path\x18\x02 \x01(\tR\rrecordingPath\x12&\n\x0f\x66ile_size_bytes\x18\x03 \x01(\x03R\rfileSizeBytes\x12)\n\x10\x64uration_seconds\x18\x04 \x01(\x03R\x0f\x64urationSeconds\"i\n\x1aRecordingCompletedResponse\x12&\n\x06status\x18\x01 \x01(\x0b\x32\x0e.common.StatusR\x06status\x12#\n\rrecording_url\x18\x02 \x01(\tR\x0crecordingUrl\"\xa1\x04\n\x06Stream\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n\x07user_id\x18\x02 \x01(\x03R\x06userId\x12\x1d\n\nstream_key\x18\x03 \x01(\tR\tstreamKey\x12\x14\n\x05title\x18\x04 \x01(\tR\x05title\x12 \n\x0b\x64\x65scription\x18\x05 \x01(\tR\x0b\x64\x65scription\x12,\n\x06status\x18\x06 \x01(\x0e\x32\x14.stream.StreamStatusR\x06status\x12\x30\n\nstarted_at\x18\x07 \x01(\x0b\x32\x11.common.TimestampR\tstartedAt\x12,\n\x08\x65nded_at\x18\x08 \x01(\x0b\x32\x11.common.TimestampR\x07\x65ndedAt\x12)\n\x10\x64uration_seconds\x18\t \x01(\x03R\x0f\x64urationSeconds\x12!\n\x0cviewer_count\x18\n \x01(\x03R\x0bviewerCount\x12#\n\rrecording_url\x18\x0b \x01(\tR\x0crecordingUrl\x12\x32\n\x08metadata\x18\x0c \x01(\x0b\x32\x16.stream.StreamMetadataR\x08metadata\x12\x30\n\ncreated_at\x18\r \x01(\x0b\x32\x11.common.TimestampR\tcreatedAt\x12\x30\n\nupdated_at\x18\x0e \x01(\x0b\x32\x11.common.TimestampR\tupdatedAt\"\xb2\x02\n\x0eStreamMetadata\x12\x1e\n\nresolution\x18\x01 \x01(\tR\nresolution\x12\x18\n\x07\x62itrate\x18\x02 \x01(\x05R\x07\x62itrate\x12\x10\n\x03\x66ps\x18\x03 \x01(\x05R\x03\x66ps\x12\x14\n\x05\x63odec\x18\x04 \x01(\tR\x05\x63odec\x12\x1b\n\tclient_ip\x18\x05 \x01(\tR\x08\x63lientIp\x12\x19\n\x08\x61pp_name\x18\x06 \x01(\tR\x07\x61ppName\x12G\n\x0b\x63ustom_data\x18\x07 \x03(\x0b\x32&.stream.StreamMetadata.CustomDataEntryR\ncustomData\x1a=\n\x0f\x43ustomDataEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01*j\n\x0cStreamStatus\x12\x12\n\x0eSTREAM_PENDING\x10\x00\x12\x0f\n\x0bSTREAM_LIVE\x10\x01\x12\x10\n\x0cSTREAM_ENDED\x10\x02\x12\x10\n\x0cSTREAM_ERROR\x10\x03\x12\x11\n\rSTREAM_PAUSED\x10\x04\x32\xb7\x04\n\rStreamService\x12X\n\x11ValidateStreamKey\x12 .stream.ValidateStreamKeyRequest\x1a!.stream.ValidateStreamKeyResponse\x12I\n\x0c\x43reateStream\x12\x1b.stream.CreateStreamRequest\x1a\x1c.stream.CreateStreamResponse\x12I\n\x0cUpdateStream\x12\x1b.stream.UpdateStreamRequest\x1a\x1c.stream.UpdateStreamResponse\x12@\n\tGetStream\x12\x18.stream.GetStreamRequest\x1a\x19.stream.GetStreamResponse\x12U\n\x10GetActiveStreams\x12\x1f.stream.GetActiveStreamsRequest\x1a .stream.GetActiveStreamsResponse\x12@\n\tEndStream\x12\x18.stream.EndStreamRequest\x1a\x19.stream.EndStreamResponse\x12[\n\x12RecordingCompleted\x12!.stream.RecordingCompletedRequest\x1a\".stream.RecordingCompletedResponseB\xc2\x01\n\ncom.streamB\x12StreamServiceProtoP\x01Zhgithub.com/Saoudyahya/Live-Streaming-Platform-Architecture/services/stream-management-service/gen/stream\xa2\x02\x03SXX\xaa\x02\x06Stream\xca\x02\x06Stream\xe2\x02\x12Stream\\GPBMetadata\xea\x02\x06Streamb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'stream.stream_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\ncom.streamB\022StreamServiceProtoP\001Zhgithub.com/Saoudyahya/Live-Streaming-Platform-Architecture/services/stream-management-service/gen/stream\242\002\003SXX\252\002\006Stream\312\002\006Stream\342\002\022Stream\\GPBMetadata\352\002\006Stream'
  _globals['_STREAMMETADATA_CUSTOMDATAENTRY']._loaded_options = None
  _globals['_STREAMMETADATA_CUSTOMDATAENTRY']._serialized_options = b'8\001'
  _globals['_STREAMSTATUS']._serialized_start=2972
  _globals['_STREAMSTATUS']._serialized_end=3078
  _globals['_VALIDATESTREAMKEYREQUEST']._serialized_start=84
  _globals['_VALIDATESTREAMKEYREQUEST']._serialized_end=199
  _globals['_VALIDATESTREAMKEYRESPONSE']._serialized_start=202
  _globals['_VALIDATESTREAMKEYRESPONSE']._serialized_end=410
  _globals['_STREAMPERMISSIONS']._serialized_start=413
  _globals['_STREAMPERMISSIONS']._serialized_end=577
  _globals['_CREATESTREAMREQUEST']._serialized_start=580
  _globals['_CREATESTREAMREQUEST']._serialized_end=765
  _globals['_CREATESTREAMRESPONSE']._serialized_start=768
  _globals['_CREATESTREAMRESPONSE']._serialized_end=899
  _globals['_UPDATESTREAMREQUEST']._serialized_start=902
  _globals['_UPDATESTREAMREQUEST']._serialized_end=1128
  _globals['_UPDATESTREAMRESPONSE']._serialized_start=1130
  _globals['_UPDATESTREAMRESPONSE']._serialized_end=1232
  _globals['_GETSTREAMREQUEST']._serialized_start=1234
  _globals['_GETSTREAMREQUEST']._serialized_end=1281
  _globals['_GETSTREAMRESPONSE']._serialized_start=1283
  _globals['_GETSTREAMRESPONSE']._serialized_end=1382
  _globals['_GETACTIVESTREAMSREQUEST']._serialized_start=1384
  _globals['_GETACTIVESTREAMSREQUEST']._serialized_end=1455
  _globals['_GETACTIVESTREAMSRESPONSE']._serialized_start=1458
  _globals['_GETACTIVESTREAMSRESPONSE']._serialized_end=1632
  _globals['_ENDSTREAMREQUEST']._serialized_start=1635
  _globals['_ENDSTREAMREQUEST']._serialized_end=1764
  _globals['_ENDSTREAMRESPONSE']._serialized_start=1766
  _globals['_ENDSTREAMRESPONSE']._serialized_end=1825
  _globals['_RECORDINGCOMPLETEDREQUEST']._serialized_start=1828
  _globals['_RECORDINGCOMPLETEDREQUEST']._serialized_end=2006
  _globals['_RECORDINGCOMPLETEDRESPONSE']._serialized_start=2008
  _globals['_RECORDINGCOMPLETEDRESPONSE']._serialized_end=2113
  _globals['_STREAM']._serialized_start=2116
  _globals['_STREAM']._serialized_end=2661
  _globals['_STREAMMETADATA']._serialized_start=2664
  _globals['_STREAMMETADATA']._serialized_end=2970
  _globals['_STREAMMETADATA_CUSTOMDATAENTRY']._serialized_start=2909
  _globals['_STREAMMETADATA_CUSTOMDATAENTRY']._serialized_end=2970
  _globals['_STREAMSERVICE']._serialized_start=3081
  _globals['_STREAMSERVICE']._serialized_end=3648
# @@protoc_insertion_point(module_scope)

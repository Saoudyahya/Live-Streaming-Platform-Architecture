services:
  nginx-rtmp:
    image: alfg/nginx-rtmp
    container_name: streaming-server
    ports:
      - "1935:1935"    # RTMP ingestion port
      - "8080:80"      # HTTP/HLS/DASH delivery port
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/index.html:/opt/data/index.html
      - ./hls:/opt/data/hls          # HLS segments directory
      - ./dash:/opt/data/dash        # DASH segments directory  
      - ./recordings:/opt/data/recordings
      - ./logs:/var/log/nginx
    restart: unless-stopped
    
    # HIGH PERFORMANCE ENVIRONMENT VARIABLES
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=4096
      - NGINX_MULTI_ACCEPT=on
      - NGINX_USE_EPOLL=on
      - NGINX_SENDFILE=on
      - NGINX_TCP_NOPUSH=on
      - NGINX_TCP_NODELAY=on
      - NGINX_KEEPALIVE_TIMEOUT=65
      - NGINX_KEEPALIVE_REQUESTS=1000
      
    # RESOURCE ALLOCATION - HIGH PERFORMANCE
    deploy:
      resources:
        limits:
          cpus: '4.0'          # Use up to 4 CPU cores
          memory: 4G           # 4GB RAM limit
        reservations:
          cpus: '2.0'          # Reserve 2 CPU cores
          memory: 2G           # Reserve 2GB RAM
    
    # SHARED MEMORY - Increase for better performance
    shm_size: 1gb
    
    # ULIMITS - Remove system limitations
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 65536
        hard: 65536
    
    # TMPFS - Use RAM for temporary files (faster I/O)
    tmpfs:
      - /tmp:rw,size=1g,mode=1777
      - /var/tmp:rw,size=512m,mode=1777
    
    # SECURITY OPTIONS (optional)
    security_opt:
      - no-new-privileges:true
    
    # LOGGING CONFIGURATION - Reduce I/O overhead
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    networks:
      - streaming-network

networks:
  streaming-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.driver.mtu: "1500"
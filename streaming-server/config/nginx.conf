# config/nginx.conf - HIGH PERFORMANCE CONFIGURATION
user nginx;
worker_processes auto;                    # Auto-detect CPU cores
worker_cpu_affinity auto;                # Bind workers to CPU cores
worker_rlimit_nofile 65535;             # Handle more connections

# Error log with minimal verbosity for performance
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;              # Increased from 1024
    use epoll;                           # Linux-optimized event method
    multi_accept on;                     # Accept multiple connections
    accept_mutex off;                    # Disable for better performance
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # PERFORMANCE OPTIMIZATIONS
    sendfile on;                         # Efficient file transfers
    tcp_nopush on;                      # Optimize packet sending
    tcp_nodelay on;                     # Disable Nagle's algorithm
    keepalive_timeout 65;               # Connection reuse
    keepalive_requests 1000;            # Requests per connection
    
    # BUFFER SIZES - Increased for better performance
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    output_buffers 2 32k;
    postpone_output 1460;
    
    # TIMEOUTS - Optimized for streaming
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    
    # COMPRESSION - Reduce bandwidth usage
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        application/javascript
        application/json
        application/xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # CACHING - Optimized for streaming content
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # LOG FORMAT (minimal for performance)
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Disable access log for static content (performance)
    map $uri $loggable {
        ~*\.(ts|m3u8|mpd|m4s)$ 0;
        default 1;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name localhost;
        
        # ROOT DIRECTORY
        root /opt/data;
        index index.html;
        
        # ACCESS LOG (conditional)
        access_log /var/log/nginx/access.log main if=$loggable;
        
        # GLOBAL CORS HEADERS
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, HEAD" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # PREFLIGHT REQUESTS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, HEAD";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # HLS ENDPOINT - ULTRA LOW LATENCY
        location /hls {
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # DISABLE ACCESS LOG for HLS segments (performance)
            access_log off;
            
            # M3U8 PLAYLISTS - Aggressive no-cache
            location ~ \.m3u8$ {
                add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate" always;
                add_header Pragma "no-cache" always;
                add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT" always;
                add_header X-Accel-Expires 0;
            }
            
            # TS SEGMENTS - Minimal caching
            location ~ \.ts$ {
                add_header Cache-Control "max-age=1" always;
                expires 1s;
            }
        }
        
        # DASH ENDPOINT - ULTRA LOW LATENCY  
        location /dash {
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # DISABLE ACCESS LOG for DASH segments (performance)
            access_log off;
            
            # MPD MANIFESTS - Aggressive no-cache
            location ~ \.mpd$ {
                add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate" always;
                add_header Pragma "no-cache" always;
                add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT" always;
                add_header X-Accel-Expires 0;
            }
            
            # DASH SEGMENTS - Minimal caching
            location ~ \.(m4s|mp4)$ {
                add_header Cache-Control "max-age=1" always;
                expires 1s;
            }
        }

        # MAIN PAGE
        location / {
            try_files $uri $uri/ =404;
            
            # Cache static content briefly
            location ~* \.(html|css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 5m;
                add_header Cache-Control "public, no-transform";
            }
        }
        
        # STATISTICS ENDPOINT
        location /stats {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            add_header Cache-Control "no-cache";
        }
        
        # HEALTH CHECK
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

rtmp {
    server {
        listen 1935;
        chunk_size 8192;                    # Increased chunk size for performance
        max_streams 1024;                   # Handle more concurrent streams
        
        application live {
            live on;
            
            # RECORD SETTINGS
            record off;                     # Disable for performance
            
            # MULTIPLE BITRATE SUPPORT
            allow publish all;              # Configure security in production
            allow play all;
            
            # HLS CONFIGURATION - ULTRA LOW LATENCY
            hls on;
            hls_path /opt/data/hls;
            hls_fragment 1s;                # 1-second segments
            hls_playlist_length 3s;         # 3-second playlist
            hls_fragment_naming system;     # Timestamp naming
            hls_fragment_slicing aligned;   # Better alignment
            hls_nested on;                  # Organized structure
            hls_cleanup on;                 # Auto-cleanup old segments
            hls_sync 100ms;                 # Sync tolerance
            
            # DASH CONFIGURATION - ULTRA LOW LATENCY
            dash on;
            dash_path /opt/data/dash;
            dash_fragment 1s;               # 1-second segments
            dash_playlist_length 3s;        # 3-second playlist  
            dash_nested on;                 # Organized structure
            dash_cleanup on;                # Auto-cleanup old segments
            
            # PERFORMANCE OPTIMIZATIONS
            sync 10ms;                      # Sync interval
            interleave on;                  # Interleave audio/video
            wait_key on;                    # Wait for keyframe
            wait_video on;                  # Wait for video
            
            # NOTIFICATIONS (optional - disable for max performance)
            # on_publish http://localhost:80/on_publish;
            # on_play http://localhost:80/on_play;
            # on_publish_done http://localhost:80/on_publish_done;
            
            # TRANSCODING (optional - for multiple qualities)
            # Uncomment for multi-bitrate streaming
            # exec ffmpeg -i rtmp://localhost/live/$name -async 1 -vsync -1
            #     -c:v libx264 -c:a aac -b:v 256k -b:a 32k -vf "scale=480:270" -tune zerolatency -preset ultrafast -crf 25 -f flv rtmp://localhost/live/$name_low
            #     -c:v libx264 -c:a aac -b:v 768k -b:a 96k -vf "scale=854:480" -tune zerolatency -preset ultrafast -crf 23 -f flv rtmp://localhost/live/$name_mid
            #     -c:v libx264 -c:a aac -b:v 1024k -b:a 128k -vf "scale=1280:720" -tune zerolatency -preset ultrafast -crf 21 -f flv rtmp://localhost/live/$name_high;
        }
    }
}